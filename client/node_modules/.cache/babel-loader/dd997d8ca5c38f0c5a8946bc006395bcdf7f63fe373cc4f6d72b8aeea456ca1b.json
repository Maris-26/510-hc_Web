{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nexport const cocktailService = {\n  // Get random cocktail\n  getRandomCocktail: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/cocktails/random`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching random cocktail:', error);\n      throw error;\n    }\n  },\n  // Search cocktails by name\n  searchCocktails: async name => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/cocktails/search?name=${name}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error searching cocktails:', error);\n      throw error;\n    }\n  },\n  // Get cocktail by ID\n  getCocktailById: async id => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/cocktails/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching cocktail details:', error);\n      throw error;\n    }\n  },\n  // Get cocktails by ingredient\n  getCocktailsByIngredient: async ingredient => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/cocktails/ingredient/${ingredient}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching cocktails by ingredient:', error);\n      throw error;\n    }\n  },\n  // Get cocktails by category\n  getCocktailsByCategory: async category => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/cocktails/category/${category}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching cocktails by category:', error);\n      throw error;\n    }\n  },\n  // Get all categories\n  getCategories: async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/cocktails/categories/list`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","cocktailService","getRandomCocktail","response","get","data","error","console","searchCocktails","name","getCocktailById","id","getCocktailsByIngredient","ingredient","getCocktailsByCategory","category","getCategories"],"sources":["C:/Users/dbcsy/Documents/Github/510-hc_Web/client/src/services/cocktailService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nexport const cocktailService = {\r\n  // Get random cocktail\r\n  getRandomCocktail: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/cocktails/random`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching random cocktail:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Search cocktails by name\r\n  searchCocktails: async (name) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/cocktails/search?name=${name}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error searching cocktails:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get cocktail by ID\r\n  getCocktailById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/cocktails/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching cocktail details:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get cocktails by ingredient\r\n  getCocktailsByIngredient: async (ingredient) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/cocktails/ingredient/${ingredient}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching cocktails by ingredient:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get cocktails by category\r\n  getCocktailsByCategory: async (category) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/cocktails/category/${category}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching cocktails by category:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get all categories\r\n  getCategories: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/cocktails/categories/list`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,eAAe,GAAG;EAC7B;EACAC,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,mBAAmB,CAAC;MACpE,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,eAAe,EAAE,MAAOC,IAAI,IAAK;IAC/B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,0BAA0BS,IAAI,EAAE,CAAC;MACjF,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,eAAe,EAAE,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,cAAcW,EAAE,EAAE,CAAC;MACnE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAM,wBAAwB,EAAE,MAAOC,UAAU,IAAK;IAC9C,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,yBAAyBa,UAAU,EAAE,CAAC;MACtF,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAQ,sBAAsB,EAAE,MAAOC,QAAQ,IAAK;IAC1C,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,uBAAuBe,QAAQ,EAAE,CAAC;MAClF,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAU,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,4BAA4B,CAAC;MAC7E,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}